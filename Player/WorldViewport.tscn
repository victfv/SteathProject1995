[gd_scene load_steps=4 format=2]

[ext_resource path="res://Player/WorldViewport.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform int color_depth : hint_range(1, 8) = 5;
uniform bool dithering = true;
uniform int resolution_scale = 4;

int dithering_pattern(ivec2 fragcoord) {
	const int pattern[] = {
		-4, +0, -3, +1, 
		+2, -2, +3, -1, 
		-3, +1, -4, +0, 
		+3, -1, +2, -2
	};
	
	int x = fragcoord.x % 4;
	int y = fragcoord.y % 4;
	
	return pattern[y * 4 + x];
}

void fragment() {
	ivec2 uv = ivec2(UV * vec2(256,224));
	vec3 color = texelFetch(TEXTURE, uv * resolution_scale, 0).rgb;
	
	// Convert from [0.0, 1.0] range to [0, 255] range
	ivec3 c = ivec3(round(color * 255.0));
	
	// Apply the dithering pattern
	if (dithering) {
		c += ivec3(dithering_pattern(uv));
	}
	
	// Truncate from 8 bits to color_depth bits
	c >>= (8 - color_depth);

	// Convert back to [0.0, 1.0] range
	COLOR.rgb = vec3(c) / float(1 << color_depth);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color_depth = 5
shader_param/dithering = true
shader_param/resolution_scale = 1

[node name="WorldViweport" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 256, 224 )
render_target_v_flip = true
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="Viewport"]
current = true

[node name="CenterContainer" type="CenterContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WorldTex" type="TextureRect" parent="CenterContainer"]
material = SubResource( 2 )
margin_right = 512.0
margin_bottom = 448.0
rect_min_size = Vector2( 512, 448 )
expand = true
stretch_mode = 5
__meta__ = {
"_edit_use_anchors_": false
}
